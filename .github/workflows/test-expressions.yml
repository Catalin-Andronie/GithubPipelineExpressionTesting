name: Test GitHub expressions

on:
  push:
    tags: [ 'RELEASE' ]
    branches: [ main ]
  pull_request:
    types:
      - closed
    branches: [ main ]

env:
  # Useufll links:
  # [Events that trigger workflows](https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request_target)
  # [About pull requests](https://docs.github.com/en/rest/pulls/pulls?apiVersion=2022-11-28#get-a-pull-request)
  # [Github Expressions](https://docs.github.com/en/actions/learn-github-actions/expressions)

  IS_RELEASE_CANDIDATE: |
    ${{
      (
        github.event_name == 'pull_request' &&
        startsWith(github.event.pull_request.title, 'RELEASES:') &&
        contains(github.event.pull_request.labels.*.name, 'RELEASES')
      )
      ||
      (
        github.event_name == 'push' &&
        startsWith(github.event.head_commit.message, 'RELEASES:') &&
        github.ref_name == 'RELEASE'
      )
    }}

jobs:
  test-variable:
    runs-on: ubuntu-latest
    steps:
      - name: is 'push' event
        run: echo ${{ github.event_name == 'push' }}
      - name: commit message starts with 'RELEASES:'
        run: echo ${{ startsWith(github.event.head_commit.message, 'RELEASES:') }}
      - name: display github.ref_type
        run: echo ${{ github.ref_type }}
      - name: display github.ref_name
        run: echo ${{ github.ref_name }}
      - name: is 'pull_request' event
        run: echo ${{ github.event_name == 'pull_request' }}
      - name: pull_request title starts with 'RELEASES:'
        run: echo ${{ startsWith(github.event.pull_request.title, 'RELEASES:') }}
      - name: pull_request labels.*.name contains 'RELEASES'
        run: echo ${{ contains(github.event.pull_request.labels.*.name, 'RELEASES') }}
      - name: env.IS_RELEASE_CANDIDATE
        run: echo ${{ env.IS_RELEASE_CANDIDATE }}
      - name: Tag Commit on Build Success
        if: ${{ success() && github.event_name == 'pull_request' && github.ref_type != 'tag' && env.IS_RELEASE_CANDIDATE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          commit_sha=$(git rev-parse HEAD)
          git tag -a RELEASES $commit_sha -m "Tagging last commit with RELEASES on successful build and test" --force
          git push origin --tags --force